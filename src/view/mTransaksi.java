/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import com.sun.glass.events.KeyEvent;
import database.Koneksi;
import java.awt.Color;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.NumberFormat;
import java.util.Locale;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author hafid
 */
public class mTransaksi extends javax.swing.JInternalFrame {

    /**
     * Creates new form mTransaksi
     */
    private int hargaSatuan = 0;
    NumberFormat nf = NumberFormat.getNumberInstance(new Locale("in", "ID"));
    
    public mTransaksi() {
        initComponents();
        
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI bui = (BasicInternalFrameUI) this.getUI();
        bui.setNorthPane(null);
        
        tIdKaryawan1.setVisible(false);
        tIdTransaksi.setVisible(false);
        Id_Order.setVisible(false);
        
        btnKonfirmasi.setBackground(new Color(0,0,0,0));
        btnKonfirmasi.setOpaque(false);
        
        btnBatal.setBackground(new Color(0,0,0,0));
        btnBatal.setOpaque(false);
        
        dataTabel();
    }
    
    public void setData(JLabel data) {
        tIdKaryawan1.setText(data.getText());
    }
    
    public void bersih() {
        tIdTransaksi.setText("");
        tNoOrder.setText("");
        tNamaPemesan.setText("");
        tJumlahKue.setText("");
        tComboBayar.setSelectedIndex(0);
        tTotalHarga.setText("");
        tTotalBayar.setText("");
        tKembali.setText("");
    }

    public void dataTabel() {
        DefaultTableModel tbl = new DefaultTableModel() {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
                
        tbl.addColumn("ID Orders");
        tbl.addColumn("Nama Pemesan");
        tbl.addColumn("Total Kue");
        tbl.addColumn("Metode Pembayaran");
        tbl.addColumn("Harga Total");
        tbl.addColumn("Bayar");
        tbl.addColumn("Kembali");
        tabel.setModel(tbl);
        tabel.getColumnModel().getColumn(0).setMaxWidth(100);
        tabel.getColumnModel().getColumn(3).setMinWidth(100);

        try {
            String sql =  "SELECT orders.ID_orders, orders.nama_pemesan, detail_transaksi.total_kue, "
                        + "transaksi.metode_bayar, detail_transaksi.harga_total, detail_transaksi.total_bayar, detail_transaksi.kembali "
                        + "FROM transaksi, detail_transaksi, detail_produk, orders, produk "
                        + "WHERE transaksi.ID_transaksi = detail_transaksi.ID_transaksi "
                        + "AND orders.ID_orders = transaksi.ID_orders "
                        + "AND detail_produk.kode_sub_produk = detail_transaksi.kode_sub_produk "
                        + "AND produk.kode_produk = detail_transaksi.kode_produk "
                        + "GROUP BY orders.ID_orders HAVING detail_transaksi.total_bayar AND detail_transaksi.kembali IS NOT NULL";
            Statement stat = Koneksi.GetConnection().createStatement();
            ResultSet res = stat.executeQuery(sql);
            while(res.next()) {
                tbl.addRow(new Object[]{
                    res.getString("orders.ID_orders"),
                    res.getString("orders.nama_pemesan"),
                    res.getString("detail_transaksi.total_kue"),
                    res.getString("transaksi.metode_bayar"),
                    nf.format(Integer.parseInt(res.getString("detail_transaksi.harga_total"))),
                    nf.format(Integer.parseInt(res.getString("detail_transaksi.total_bayar"))),
                    nf.format(Integer.parseInt(res.getString("detail_transaksi.kembali"))),
                });
                tabel.setModel(tbl);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "Data Gagal Diambil");
            System.out.println(ex);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        cStatusBayar = new javax.swing.JComboBox<>();
        btnKonfirmasi = new javax.swing.JPanel();
        btnBatal = new javax.swing.JPanel();
        tKembali = new javax.swing.JTextField();
        tTotalBayar = new javax.swing.JTextField();
        tTotalHarga = new javax.swing.JTextField();
        tJumlahKue = new javax.swing.JTextField();
        tNamaPemesan = new javax.swing.JTextField();
        tNoOrder = new javax.swing.JTextField();
        tComboBayar = new javax.swing.JComboBox<>();
        tIdTransaksi = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabel = new javax.swing.JTable();
        tCari = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        tIdKaryawan1 = new javax.swing.JLabel();
        Id_Order = new javax.swing.JTextField();

        setMinimumSize(new java.awt.Dimension(845, 690));
        setPreferredSize(new java.awt.Dimension(845, 690));
        getContentPane().setLayout(null);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setMinimumSize(new java.awt.Dimension(845, 690));
        jPanel6.setPreferredSize(new java.awt.Dimension(845, 690));
        jPanel6.setLayout(null);

        cStatusBayar.setBackground(new java.awt.Color(204, 204, 204));
        cStatusBayar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cStatusBayar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Pilih Status -", "Tunai", "Non-Tunai" }));
        cStatusBayar.setBorder(null);
        cStatusBayar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cStatusBayarActionPerformed(evt);
            }
        });
        jPanel6.add(cStatusBayar);
        cStatusBayar.setBounds(230, 380, 140, 30);

        btnKonfirmasi.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnKonfirmasi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnKonfirmasiMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout btnKonfirmasiLayout = new javax.swing.GroupLayout(btnKonfirmasi);
        btnKonfirmasi.setLayout(btnKonfirmasiLayout);
        btnKonfirmasiLayout.setHorizontalGroup(
            btnKonfirmasiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        btnKonfirmasiLayout.setVerticalGroup(
            btnKonfirmasiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        jPanel6.add(btnKonfirmasi);
        btnKonfirmasi.setBounds(666, 231, 100, 30);

        btnBatal.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBatal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnBatalMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout btnBatalLayout = new javax.swing.GroupLayout(btnBatal);
        btnBatal.setLayout(btnBatalLayout);
        btnBatalLayout.setHorizontalGroup(
            btnBatalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 55, Short.MAX_VALUE)
        );
        btnBatalLayout.setVerticalGroup(
            btnBatalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        jPanel6.add(btnBatal);
        btnBatal.setBounds(574, 231, 55, 30);

        tKembali.setEditable(false);
        tKembali.setBackground(new java.awt.Color(248, 248, 245));
        tKembali.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tKembali.setBorder(null);
        tKembali.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        jPanel6.add(tKembali);
        tKembali.setBounds(578, 183, 190, 28);

        tTotalBayar.setBackground(new java.awt.Color(248, 248, 245));
        tTotalBayar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tTotalBayar.setBorder(null);
        tTotalBayar.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        tTotalBayar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tTotalBayarKeyTyped(evt);
            }
        });
        jPanel6.add(tTotalBayar);
        tTotalBayar.setBounds(578, 141, 190, 28);

        tTotalHarga.setEditable(false);
        tTotalHarga.setBackground(new java.awt.Color(248, 248, 245));
        tTotalHarga.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tTotalHarga.setBorder(null);
        tTotalHarga.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        jPanel6.add(tTotalHarga);
        tTotalHarga.setBounds(578, 98, 190, 28);

        tJumlahKue.setEditable(false);
        tJumlahKue.setBackground(new java.awt.Color(248, 248, 245));
        tJumlahKue.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tJumlahKue.setBorder(null);
        tJumlahKue.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        jPanel6.add(tJumlahKue);
        tJumlahKue.setBounds(188, 185, 130, 28);

        tNamaPemesan.setEditable(false);
        tNamaPemesan.setBackground(new java.awt.Color(248, 248, 245));
        tNamaPemesan.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tNamaPemesan.setBorder(null);
        tNamaPemesan.setDisabledTextColor(new java.awt.Color(248, 248, 245));
        jPanel6.add(tNamaPemesan);
        tNamaPemesan.setBounds(188, 140, 225, 28);

        tNoOrder.setBackground(new java.awt.Color(248, 248, 245));
        tNoOrder.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tNoOrder.setBorder(null);
        tNoOrder.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tNoOrderKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tNoOrderKeyTyped(evt);
            }
        });
        jPanel6.add(tNoOrder);
        tNoOrder.setBounds(188, 98, 123, 28);

        tComboBayar.setBackground(new java.awt.Color(204, 204, 204));
        tComboBayar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tComboBayar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Pilih Metode -", "Tunai", "Non-Tunai" }));
        tComboBayar.setBorder(null);
        jPanel6.add(tComboBayar);
        tComboBayar.setBounds(180, 223, 190, 35);
        jPanel6.add(tIdTransaksi);
        tIdTransaksi.setBounds(330, 100, 65, 24);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/Form Transaksi.png"))); // NOI18N
        jPanel6.add(jLabel1);
        jLabel1.setBounds(40, 30, 750, 250);

        tabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabel);

        jPanel6.add(jScrollPane1);
        jScrollPane1.setBounds(40, 430, 750, 180);

        tCari.setBackground(new java.awt.Color(248, 248, 245));
        tCari.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tCariKeyReleased(evt);
            }
        });
        jPanel6.add(tCari);
        tCari.setBounds(618, 380, 170, 30);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Cari :");
        jPanel6.add(jLabel3);
        jLabel3.setBounds(580, 380, 31, 30);

        jButton1.setBackground(new java.awt.Color(145, 109, 83));
        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton1.setText("Detail Pesanan");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel6.add(jButton1);
        jButton1.setBounds(40, 380, 130, 30);
        jPanel6.add(tIdKaryawan1);
        tIdKaryawan1.setBounds(670, 10, 65, 24);

        Id_Order.setText("jTextField1");
        jPanel6.add(Id_Order);
        Id_Order.setBounds(40, 340, 59, 20);

        getContentPane().add(jPanel6);
        jPanel6.setBounds(0, 0, 845, 690);

        setBounds(0, 0, 845, 690);
    }// </editor-fold>//GEN-END:initComponents

    private void tNoOrderKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tNoOrderKeyReleased
        // TODO add your handling code here:
        if (tNoOrder.getText().isEmpty()) {
            tNamaPemesan.setText("");
            tJumlahKue.setText("");
            tComboBayar.setSelectedIndex(0);
            tTotalHarga.setText("");
            tIdTransaksi.setText("");
            tTotalBayar.setText("");
            tKembali.setText("");
        } else {
            try {
                String sql =  "SELECT detail_transaksi.ID_transaksi, orders.ID_orders, orders.nama_pemesan, detail_transaksi.total_kue, "
                            + "transaksi.metode_bayar, detail_transaksi.harga_total, detail_transaksi.total_bayar, detail_transaksi.kembali "
                            + "FROM transaksi, detail_transaksi, detail_produk, orders, produk "
                            + "WHERE transaksi.ID_transaksi = detail_transaksi.ID_transaksi "
                            + "AND orders.ID_orders = transaksi.ID_orders "
                            + "AND detail_produk.kode_sub_produk = detail_transaksi.kode_sub_produk "
                            + "AND produk.kode_produk = detail_transaksi.kode_produk "
                            + "GROUP BY orders.ID_orders HAVING orders.ID_orders = '"+ tNoOrder.getText() +"'";
                Statement stat = Koneksi.GetConnection().createStatement();
                ResultSet res = stat.executeQuery(sql);
                if (res.next()) {
                    tIdTransaksi.setText(res.getString("detail_transaksi.ID_transaksi"));
                    tNamaPemesan.setText(res.getString("orders.nama_pemesan"));
                    tJumlahKue.setText(res.getString("detail_transaksi.total_kue"));
                    tComboBayar.setSelectedItem(res.getString("transaksi.metode_bayar"));
                    tTotalHarga.setText(res.getString("detail_transaksi.harga_total"));
                    tTotalBayar.setText(res.getString("detail_transaksi.total_bayar"));
                    tKembali.setText(res.getString("detail_transaksi.kembali"));
                    if (!tTotalBayar.getText().isEmpty() && !tKembali.getText().isEmpty()) {
                        JOptionPane.showMessageDialog(rootPane, "Pesanan Telah Di Bayarkan");   
                    } 
                } 
            } catch (Exception ex) {
                System.out.println(ex);
            }
        }
    }//GEN-LAST:event_tNoOrderKeyReleased

    private void tCariKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tCariKeyReleased
        // TODO add your handling code here:
        DefaultTableModel tbl = new DefaultTableModel() {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
                
        tbl.addColumn("ID Orders");
        tbl.addColumn("Nama Pemesan");
        tbl.addColumn("Total Kue");
        tbl.addColumn("Metode Pembayaran");
        tbl.addColumn("Harga Total");
        tbl.addColumn("Bayar");
        tbl.addColumn("Kembali");
        tabel.setModel(tbl);
        tabel.getColumnModel().getColumn(0).setMaxWidth(100);
        tabel.getColumnModel().getColumn(3).setMinWidth(100);

        try {
            String sql =  "SELECT orders.ID_orders, orders.nama_pemesan, detail_transaksi.total_kue, "
                        + "transaksi.metode_bayar, detail_transaksi.harga_total, detail_transaksi.total_bayar, detail_transaksi.kembali "
                        + "FROM transaksi, detail_transaksi, detail_produk, orders, produk "
                        + "WHERE transaksi.ID_transaksi = detail_transaksi.ID_transaksi "
                        + "AND orders.ID_orders = transaksi.ID_orders "
                        + "AND detail_produk.kode_sub_produk = detail_transaksi.kode_sub_produk "
                        + "AND produk.kode_produk = detail_transaksi.kode_produk "
                        + "GROUP BY orders.ID_orders HAVING detail_transaksi.total_bayar AND detail_transaksi.kembali IS NOT NULL "
                        + "AND orders.ID_orders LIKE '%"+ tCari.getText() +"%' OR orders.nama_pemesan LIKE '%"+ tCari.getText() +"%'";
            Statement stat = Koneksi.GetConnection().createStatement();
            ResultSet res = stat.executeQuery(sql);
            while(res.next()) {
                tbl.addRow(new Object[]{
                    res.getString("orders.ID_orders"),
                    res.getString("orders.nama_pemesan"),
                    res.getString("detail_transaksi.total_kue"),
                    res.getString("transaksi.metode_bayar"),
                    nf.format(Integer.parseInt(res.getString("detail_transaksi.harga_total"))),
                    nf.format(Integer.parseInt(res.getString("detail_transaksi.total_bayar"))),
                    nf.format(Integer.parseInt(res.getString("detail_transaksi.kembali"))),
                });
                tabel.setModel(tbl);
            }
        } catch (Exception ex) {
//            JOptionPane.showMessageDialog(rootPane, "Data Gagal Diambil");
            System.out.println(ex);
        }
    }//GEN-LAST:event_tCariKeyReleased

    private void btnBatalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBatalMouseClicked
        // TODO add your handling code here:
        bersih();
    }//GEN-LAST:event_btnBatalMouseClicked

    private void btnKonfirmasiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnKonfirmasiMouseClicked
        // TODO add your handling code here:
        if (tNoOrder.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Masukan Nomor Order Terlebih Dahulu");
        } else if (tTotalBayar.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Mohon Masukan Nominal Pembayaran");
        } else if (Integer.parseInt(tTotalBayar.getText()) < Integer.parseInt(tTotalHarga.getText())) {
            JOptionPane.showMessageDialog(rootPane, "Nominal Yang Dimasukan Tidak Cukup");
        } else {
            int kembalian = Integer.parseInt(tTotalBayar.getText()) - Integer.parseInt(tTotalHarga.getText());
            String kembali = Integer.toString(kembalian);
            tKembali.setText(kembali);
            
            try {
                String sql = "UPDATE detail_transaksi SET total_bayar = '"+ tTotalBayar.getText() +"', "
                           + "kembali = '"+ tKembali.getText() +"' WHERE ID_transaksi = '"+ tIdTransaksi.getText() +"'";
                Statement stat = Koneksi.GetConnection().createStatement();
                stat.execute(sql);
                JOptionPane.showMessageDialog(rootPane, "Pembayaran Berhasil Di Proses");
                dataTabel();
                bersih();
            } catch (Exception ex) {
                System.out.println(ex);
                JOptionPane.showMessageDialog(this, "Pembayaran Gagal Di Proses");
            }
        }
    }//GEN-LAST:event_btnKonfirmasiMouseClicked

    private void tTotalBayarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tTotalBayarKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || (c == KeyEvent.VK_BACKSPACE) || c == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_tTotalBayarKeyTyped

    private void tNoOrderKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tNoOrderKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || (c == KeyEvent.VK_BACKSPACE) || c == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_tNoOrderKeyTyped

    private void cStatusBayarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cStatusBayarActionPerformed
        // TODO add your handling code here:
        if (cStatusBayar.getSelectedIndex() == 1) {
            DefaultTableModel tbl = new DefaultTableModel() {
                boolean[] canEdit = new boolean [] {
                    false, false, false, false, false
                };

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit [columnIndex];
                }
            };

            tbl.addColumn("ID Orders");
            tbl.addColumn("Nama Pemesan");
            tbl.addColumn("Total Kue");
            tbl.addColumn("Metode Pembayaran");
            tbl.addColumn("Harga Total");
            tbl.addColumn("Bayar");
            tbl.addColumn("Kembali");
            tabel.setModel(tbl);
            tabel.getColumnModel().getColumn(0).setMaxWidth(100);
            tabel.getColumnModel().getColumn(3).setMinWidth(100);

            try {
                String sql =  "SELECT orders.ID_orders, orders.nama_pemesan, detail_transaksi.total_kue, "
                            + "transaksi.metode_bayar, detail_transaksi.harga_total, detail_transaksi.total_bayar, detail_transaksi.kembali "
                            + "FROM transaksi, detail_transaksi, detail_produk, orders, produk "
                            + "WHERE transaksi.ID_transaksi = detail_transaksi.ID_transaksi "
                            + "AND orders.ID_orders = transaksi.ID_orders "
                            + "AND detail_produk.kode_sub_produk = detail_transaksi.kode_sub_produk "
                            + "AND produk.kode_produk = detail_transaksi.kode_produk "
                            + "GROUP BY orders.ID_orders HAVING detail_transaksi.total_bayar AND detail_transaksi.kembali IS NOT NULL AND transaksi.metode_bayar = 'Tunai'";
                Statement stat = Koneksi.GetConnection().createStatement();
                ResultSet res = stat.executeQuery(sql);
                while(res.next()) {
                    tbl.addRow(new Object[]{
                        res.getString("orders.ID_orders"),
                        res.getString("orders.nama_pemesan"),
                        res.getString("detail_transaksi.total_kue"),
                        res.getString("transaksi.metode_bayar"),
                        nf.format(Integer.parseInt(res.getString("detail_transaksi.harga_total"))),
                        nf.format(Integer.parseInt(res.getString("detail_transaksi.total_bayar"))),
                        nf.format(Integer.parseInt(res.getString("detail_transaksi.kembali"))),
                    });
                    tabel.setModel(tbl);
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(rootPane, "Data Gagal Diambil");
                System.out.println(ex);
            }
        } else if (cStatusBayar.getSelectedIndex() == 2) {
            DefaultTableModel tbl = new DefaultTableModel() {
                boolean[] canEdit = new boolean [] {
                    false, false, false, false, false
                };

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit [columnIndex];
                }
            };

            tbl.addColumn("ID Orders");
            tbl.addColumn("Nama Pemesan");
            tbl.addColumn("Total Kue");
            tbl.addColumn("Metode Pembayaran");
            tbl.addColumn("Harga Total");
            tbl.addColumn("Bayar");
            tbl.addColumn("Kembali");
            tabel.setModel(tbl);
            tabel.getColumnModel().getColumn(0).setMaxWidth(100);
            tabel.getColumnModel().getColumn(3).setMinWidth(100);

            try {
                String sql =  "SELECT orders.ID_orders, orders.nama_pemesan, detail_transaksi.total_kue, "
                            + "transaksi.metode_bayar, detail_transaksi.harga_total, detail_transaksi.total_bayar, detail_transaksi.kembali "
                            + "FROM transaksi, detail_transaksi, detail_produk, orders, produk "
                            + "WHERE transaksi.ID_transaksi = detail_transaksi.ID_transaksi "
                            + "AND orders.ID_orders = transaksi.ID_orders "
                            + "AND detail_produk.kode_sub_produk = detail_transaksi.kode_sub_produk "
                            + "AND produk.kode_produk = detail_transaksi.kode_produk "
                            + "GROUP BY orders.ID_orders HAVING detail_transaksi.total_bayar AND detail_transaksi.kembali IS NOT NULL AND transaksi.metode_bayar = 'Non-Tunai'";
                Statement stat = Koneksi.GetConnection().createStatement();
                ResultSet res = stat.executeQuery(sql);
                while(res.next()) {
                    tbl.addRow(new Object[]{
                        res.getString("orders.ID_orders"),
                        res.getString("orders.nama_pemesan"),
                        res.getString("detail_transaksi.total_kue"),
                        res.getString("transaksi.metode_bayar"),
                        nf.format(Integer.parseInt(res.getString("detail_transaksi.harga_total"))),
                        nf.format(Integer.parseInt(res.getString("detail_transaksi.total_bayar"))),
                        nf.format(Integer.parseInt(res.getString("detail_transaksi.kembali"))),
                    });
                    tabel.setModel(tbl);
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(rootPane, "Data Gagal Diambil");
                System.out.println(ex);
            }
        } else {
            DefaultTableModel tbl = new DefaultTableModel() {
                boolean[] canEdit = new boolean [] {
                    false, false, false, false, false
                };

                public boolean isCellEditable(int rowIndex, int columnIndex) {
                    return canEdit [columnIndex];
                }
            };

            tbl.addColumn("ID Orders");
            tbl.addColumn("Nama Pemesan");
            tbl.addColumn("Total Kue");
            tbl.addColumn("Metode Pembayaran");
            tbl.addColumn("Harga Total");
            tbl.addColumn("Bayar");
            tbl.addColumn("Kembali");
            tabel.setModel(tbl);
            tabel.getColumnModel().getColumn(0).setMaxWidth(100);
            tabel.getColumnModel().getColumn(3).setMinWidth(100);

            try {
                String sql =  "SELECT orders.ID_orders, orders.nama_pemesan, detail_transaksi.total_kue, "
                            + "transaksi.metode_bayar, detail_transaksi.harga_total, detail_transaksi.total_bayar, detail_transaksi.kembali "
                            + "FROM transaksi, detail_transaksi, detail_produk, orders, produk "
                            + "WHERE transaksi.ID_transaksi = detail_transaksi.ID_transaksi "
                            + "AND orders.ID_orders = transaksi.ID_orders "
                            + "AND detail_produk.kode_sub_produk = detail_transaksi.kode_sub_produk "
                            + "AND produk.kode_produk = detail_transaksi.kode_produk "
                            + "GROUP BY orders.ID_orders HAVING detail_transaksi.total_bayar AND detail_transaksi.kembali IS NOT NULL";
                Statement stat = Koneksi.GetConnection().createStatement();
                ResultSet res = stat.executeQuery(sql);
                while(res.next()) {
                    tbl.addRow(new Object[]{
                        res.getString("orders.ID_orders"),
                        res.getString("orders.nama_pemesan"),
                        res.getString("detail_transaksi.total_kue"),
                        res.getString("transaksi.metode_bayar"),
                        nf.format(Integer.parseInt(res.getString("detail_transaksi.harga_total"))),
                        nf.format(Integer.parseInt(res.getString("detail_transaksi.total_bayar"))),
                        nf.format(Integer.parseInt(res.getString("detail_transaksi.kembali"))),
                    });
                    tabel.setModel(tbl);
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(rootPane, "Data Gagal Diambil");
                System.out.println(ex);
            }
        }
    }//GEN-LAST:event_cStatusBayarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        mDetailTransaksi mDT = new mDetailTransaksi();
        mDT.setData(Id_Order);
        mDT.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelMouseClicked
        // TODO add your handling code here:
        int i = tabel.getSelectedRow();
        TableModel tb = tabel.getModel();
        
        String data1 = tb.getValueAt(i, 0).toString();
        Id_Order.setText(data1);
    }//GEN-LAST:event_tabelMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Id_Order;
    private javax.swing.JPanel btnBatal;
    private javax.swing.JPanel btnKonfirmasi;
    private javax.swing.JComboBox<String> cStatusBayar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField tCari;
    private javax.swing.JComboBox<String> tComboBayar;
    private javax.swing.JLabel tIdKaryawan1;
    private javax.swing.JLabel tIdTransaksi;
    private javax.swing.JTextField tJumlahKue;
    private javax.swing.JTextField tKembali;
    private javax.swing.JTextField tNamaPemesan;
    private javax.swing.JTextField tNoOrder;
    private javax.swing.JTextField tTotalBayar;
    private javax.swing.JTextField tTotalHarga;
    private javax.swing.JTable tabel;
    // End of variables declaration//GEN-END:variables
}
